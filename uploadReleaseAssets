#!/usr/bin/env bash

set -euo pipefail

DIR="$(cd $(dirname ${0}); pwd)"
source "${DIR}/scripts/shared"

# upload a release file.
# this must be called only after a successful create_release, as create_release saves
# the json response in release.json.
# token: github api user token
# file: path to the asset file to upload
# name: name to use for the uploaded asset
upload_release_file() {
    file="${1}"
    name="$(basename ${file})"

    token="${GITHUB_TOKEN}"
    url="${UPLOAD_URL}"

    echo "Uploading ${name} from ${file} to ${url}"

    set -x
    http_code="$(curl -s -o upload.json -w '%{http_code}' \
                            --request POST \
                            --header "authorization: Bearer ${token}" \
                            --header 'Content-Type: application/octet-stream' \
                            --data-binary @"${file}"
                            "${url}?name=${name}")"
    set +x
    if [ $http_code == "201" ]; then
        echo "asset $name uploaded:"
        jq -r .browser_download_url upload.json
    else
        echo "upload failed with code '$http_code':"
        cat upload.json
        echo "command:"
        return 1
    fi
}

for filename in ${RELEASES_DIR}/*; do
  upload_release_file "${filename}"
done
